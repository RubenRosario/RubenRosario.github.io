{"version":3,"sources":["3d models/Polygon.js","Components/PolygonContainer.js","Components/Landing.js","pages/Homepage.js","App.js","index.js"],"names":["TAU","Zdog","ROOT3","Math","sqrt","PHI","octahedron","colors","selector","scalePercentage","illustration","Illustration","element","Anchor","addTo","translate","x","y","scale","colorWheel","radius","height","tilt","asin","forEach","ySide","i","rotor","rotate","anchor","z","Polygon","sides","stroke","fill","color","backface","animate","updateRenderGraph","requestAnimationFrame","dodecahedron","midradius","face","copy","1","rotor1","rotor2","atan","tetrahedron","inradius","cos","triangle","acos","set","icosahedron","isocahedron","faceRadius","faceHeight","capApothem","tan","capRadius","sin","capTilt","capSagitta","sideTilt","sideHeight","capColors","sideColors","capRotateX","isYPos","capAnchor","sideRotateX","sideAnchor","props","illoSelector","polygonType","useEffect","width","className","onMouseOver","PolygonContainer","textColor","polygonName","useState","isNameShowed","showName","Fragment","onMouseLeave","Landing","Homepage","App","state","landingData","profileData","landing","experience","education","skills","interests","awards","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.183d1a90.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\nimport Zdog from 'zdog';\n\nconst TAU = Zdog.TAU;\nconst ROOT3 = Math.sqrt(3);\nconst ROOT5 = Math.sqrt(5);\nconst PHI = (1 + ROOT5) / 2;\n\nconst Polygon = (props) => {\n  const colors = props.colors;\n  const selector = props.illoSelector;\n  const polygonType = props.polygonType;\n\n  useEffect(() => {\n    switch (polygonType) {\n      case 'dodecahedron':\n        dodecahedron(colors, selector);\n        break;\n      case 'octahedron':\n        octahedron(colors, selector);\n        break;\n      case 'tetrahedron':\n        tetrahedron(colors, selector);\n        break;\n      case 'icosahedron':\n        icosahedron(colors, selector);\n        break;\n      default:\n        icosahedron(colors, selector);\n    }\n  }, [colors, selector, polygonType]);\n\n  return (\n    <canvas\n      width=\"200\"\n      height=\"200\"\n      className={selector}\n      onMouseOver={props.onMouseOver}\n    ></canvas>\n  );\n};\n\nconst octahedron = (colors, selector, scalePercentage) => {\n  let illustration = new Zdog.Illustration({\n    element: `.${selector}`,\n  });\n\n  let octahedron = new Zdog.Anchor({\n    addTo: illustration,\n    translate: { x: -4, y: 4 },\n    scale: 90,\n  });\n  let colorWheel = colors;\n\n  // radius of triangle with side length = 1\n  let radius = ((ROOT3 / 2) * 2) / 3;\n  let height = (radius * 3) / 2;\n  let tilt = Math.asin(0.5 / height);\n\n  [-1, 1].forEach(function (ySide) {\n    for (let i = 0; i < 4; i++) {\n      let rotor = new Zdog.Anchor({\n        addTo: octahedron,\n        rotate: { y: (TAU / 4) * (i + 1.5) * -1 },\n      });\n\n      let anchor = new Zdog.Anchor({\n        addTo: rotor,\n        translate: { z: 0.5 },\n        rotate: { x: tilt * ySide },\n        // scale: { y: -ySide },\n      });\n\n      new Zdog.Polygon({\n        sides: 3,\n        radius: radius,\n        addTo: anchor,\n        translate: { y: (-radius / 2) * ySide },\n        scale: { y: ySide },\n        stroke: false,\n        fill: true,\n        color: colorWheel[i + 0.5 + 0.5 * ySide],\n        backface: true,\n      });\n    }\n  });\n\n  function animate() {\n    // rotate illo each frame\n    illustration.rotate.x -= 0.01;\n    illustration.rotate.y += 0.01;\n    illustration.rotate.z += 0.01;\n    illustration.updateRenderGraph();\n    // animate next frame\n    requestAnimationFrame(animate);\n  }\n  // start animation\n  animate();\n  illustration.updateRenderGraph();\n};\n\nconst dodecahedron = (colors, selector) => {\n  let illustration = new Zdog.Illustration({\n    element: `.${selector}`,\n  });\n  let dodecahedron = new Zdog.Anchor({\n    addTo: illustration,\n    translate: { x: 0, y: 4 },\n    scale: 35,\n  });\n\n  // https://en.wikipedia.org/wiki/Regular_dodecahedron#Dimensions\n  let midradius = (PHI * PHI) / 2;\n\n  // top & bottom faces\n  let face = new Zdog.Polygon({\n    sides: 5,\n    radius: 1,\n    addTo: dodecahedron,\n    translate: { y: -midradius },\n    rotate: { x: TAU / 4 },\n    fill: true,\n    stroke: false,\n    color: colors[1],\n    // backface: false,\n  });\n\n  face.copy({\n    translate: { y: midradius },\n    rotate: { x: -TAU / 4 },\n    color: colors[3],\n  });\n\n  [-1, 1].forEach(function (ySide) {\n    let colorWheel = {\n      '-1': colors,\n      1: colors,\n    }[ySide];\n\n    for (let i = 0; i < 5; i++) {\n      let rotor1 = new Zdog.Anchor({\n        addTo: dodecahedron,\n        rotate: { y: (TAU / 5) * i },\n      });\n      let rotor2 = new Zdog.Anchor({\n        addTo: rotor1,\n        rotate: { x: (TAU / 4) * ySide - Math.atan(2) },\n      });\n\n      face.copy({\n        addTo: rotor2,\n        translate: { z: midradius },\n        rotate: { z: TAU / 2 },\n        color: colorWheel[i],\n      });\n    }\n  });\n\n  function animate() {\n    // rotate illo each frame\n    illustration.rotate.x += 0.01;\n    illustration.rotate.z += 0.01;\n    illustration.rotate.y += 0.01;\n    illustration.updateRenderGraph();\n    // animate next frame\n    requestAnimationFrame(animate);\n  }\n  // start animation\n  animate();\n  illustration.updateRenderGraph();\n};\n\nconst tetrahedron = (colors, selector) => {\n  let illustration = new Zdog.Illustration({\n    element: `.${selector}`,\n  });\n\n  let tetrahedron = new Zdog.Anchor({\n    addTo: illustration,\n    translate: { x: 0, y: 0 },\n    scale: 130,\n  });\n\n  let radius = 0.5;\n  let inradius = Math.cos(TAU / 6) * radius;\n  let height = radius + inradius;\n\n  let triangle = new Zdog.Polygon({\n    sides: 3,\n    radius: radius,\n    addTo: tetrahedron,\n    translate: { y: height / 2 },\n    fill: true,\n    stroke: false,\n    color: colors[1],\n    // backface: false,\n  });\n\n  for (let i = 0; i < 3; i++) {\n    let rotor1 = new Zdog.Anchor({\n      addTo: tetrahedron,\n      rotate: { y: (TAU / 3) * -i },\n    });\n    let rotor2 = new Zdog.Anchor({\n      addTo: rotor1,\n      translate: { z: inradius, y: height / 2 },\n      rotate: { x: Math.acos(1 / 3) * -1 + TAU / 4 },\n    });\n    triangle.copy({\n      addTo: rotor2,\n      translate: { y: -inradius },\n      color: colors[i],\n    });\n  }\n\n  triangle.rotate.set({ x: -TAU / 4, z: -TAU / 2 });\n\n  function animate() {\n    // rotate illo each frame\n    illustration.rotate.x += 0.01;\n    illustration.rotate.y += 0.01;\n    illustration.rotate.z -= 0.01;\n    illustration.updateRenderGraph();\n    // animate next frame\n    requestAnimationFrame(animate);\n  }\n  // start animation\n  animate();\n  illustration.updateRenderGraph();\n};\n\nconst icosahedron = (colors, selector) => {\n  let illustration = new Zdog.Illustration({\n    element: `.${selector}`,\n  });\n\n  let isocahedron = new Zdog.Anchor({\n    addTo: illustration,\n    translate: { x: 4, y: 4 },\n    scale: 60,\n  });\n\n  // geometry\n  // radius of triangle with side length = 1\n  let faceRadius = ((ROOT3 / 2) * 2) / 3;\n  let faceHeight = (faceRadius * 3) / 2;\n  let capApothem = 0.5 / Math.tan(TAU / 10);\n  let capRadius = 0.5 / Math.sin(TAU / 10);\n  let capTilt = Math.asin(capApothem / faceHeight);\n  let capSagitta = capRadius - capApothem;\n  let sideTilt = Math.asin(capSagitta / faceHeight);\n  let sideHeight = Math.sqrt(faceHeight * faceHeight - capSagitta * capSagitta);\n\n  // let colorWheel = [ eggplant, garnet, orange, gold, yellow ];\n\n  [-1, 1].forEach(function (ySide) {\n    let capColors = {\n      '-1': ['#e8daa5', '#ede3ba', '#d2ba55', '#e2d291', '#d8c269', '#cdb140'],\n      1: ['#e8daa5', '#ede3ba', '#d2ba55', '#e2d291', '#d8c269', '#cdb140'],\n    }[ySide];\n\n    let sideColors = {\n      '-1': colors,\n      1: colors,\n    }[ySide];\n\n    for (let i = 0; i < 5; i++) {\n      let rotor = new Zdog.Anchor({\n        addTo: isocahedron,\n        rotate: { y: (TAU / 5) * -i },\n        translate: { y: (sideHeight / 2) * ySide },\n      });\n\n      let capRotateX = -capTilt;\n      let isYPos = ySide > 0;\n      capRotateX += isYPos ? TAU / 2 : 0;\n\n      let capAnchor = new Zdog.Anchor({\n        addTo: rotor,\n        translate: { z: capApothem * ySide },\n        rotate: { x: capRotateX },\n      });\n\n      // cap face\n      let face = new Zdog.Polygon({\n        sides: 3,\n        radius: faceRadius,\n        addTo: capAnchor,\n        translate: { y: -faceRadius / 2 },\n        stroke: false,\n        fill: true,\n        color: capColors[i],\n        // backface: false,\n      });\n\n      let sideRotateX = -sideTilt;\n      sideRotateX += isYPos ? 0 : TAU / 2;\n      let sideAnchor = capAnchor.copy({\n        rotate: { x: sideRotateX },\n      });\n\n      face.copy({\n        addTo: sideAnchor,\n        translate: { y: -faceRadius / 2 },\n        rotate: { y: TAU / 2 },\n        color: sideColors[i],\n      });\n    }\n  });\n  function animate() {\n    // rotate illo each frame\n    illustration.rotate.x += 0.01;\n    illustration.rotate.y -= 0.01;\n    illustration.rotate.z += 0.01;\n    illustration.updateRenderGraph();\n    // animate next frame\n    requestAnimationFrame(animate);\n  }\n  // start animation\n  animate();\n  illustration.updateRenderGraph();\n};\n\nexport default Polygon;\n","import React, { useState } from 'react';\nimport Polygon from '../3d models/Polygon';\n\nimport './PolygonContainer.css';\n\nconst PolygonContainer = (props) => {\n  const polygonType = props.polygonType;\n  const colors = props.colors;\n  const polygonName = props.polygonName;\n\n  const [isNameShowed, showName] = useState('polygon-name-hide');\n\n  const onMouseOverHandler = () => {\n    showName(`polygon-name-show tracking-in-expand ${textColor}`);\n  };\n\n  const onMouseLeaveHandler = () => {\n    showName('polygon-name-hide ');\n  };\n\n  // Set text color based on polygon shape\n  /*tetrahedron icosahedron dodecahedron octahedron*/\n  let textColor;\n  switch (polygonType) {\n    case 'tetrahedron':\n      textColor = 'chocolate';\n      break;\n    case 'icosahedron':\n      textColor = 'dark-chocolate';\n      break;\n    case 'dodecahedron':\n      textColor = 'sand';\n      break;\n    case 'octahedron':\n      textColor = 'camel';\n      break;\n    default:\n  }\n\n  return (\n    <React.Fragment>\n      <div className={isNameShowed} onMouseLeave={onMouseLeaveHandler}>\n        <span>{polygonName}</span>\n      </div>\n      <Polygon\n        polygonType={polygonType}\n        illoSelector={`${polygonType}-container`}\n        colors={colors}\n        onMouseOver={onMouseOverHandler}\n      />\n    </React.Fragment>\n  );\n};\n\nexport default PolygonContainer;\n","import React from 'react';\nimport PolygonContainer from '../Components/PolygonContainer';\n\nimport './Landing.css';\n\nconst Landing = (props) => {\n  return (\n    <main className=\"landing\">\n      <section className=\"welcome-container\">\n        <p className=\"welcome-message fade-in\">\n          <span className=\"greeting\">Hello there!</span>\n          <span className=\"name\">I am Ruben.</span>\n          <span className=\"message\">\n            Welcome to my website! Please choose a stone to start.\n          </span>{' '}\n        </p>\n      </section>\n      <section className=\"polygons-container\">\n        <div className=\"landing-item about bounce-in-top1\">\n          <PolygonContainer\n            polygonName=\"About me\"\n            polygonType=\"octahedron\"\n            colors={[\n              '#211912',\n              '#533e2d',\n              '#211912',\n              '#533e2d',\n              '#211912',\n              '#533e2d',\n            ]}\n          />\n        </div>\n        <div className=\"landing-item education bounce-in-top2\">\n          <PolygonContainer\n            polygonName=\"Education\"\n            polygonType=\"icosahedron\"\n            illoSelector=\"icosahedron-container\"\n            colors={[\n              '#d8c269',\n              '#e2d291',\n              '#e8daa5',\n              '#d8c269',\n              '#d2ba55',\n              '#ede3ba',\n            ]}\n          />\n        </div>\n        <div className=\"landing-item skills bounce-in-top3\">\n          <PolygonContainer\n            polygonName=\"Skills\"\n            polygonType=\"dodecahedron\"\n            illoSelector=\"dodecahedron-container\"\n            colors={[\n              '#423224',\n              '#533E2D',\n              '#74573f',\n              '#644a36',\n              '#856348',\n              '#533E2D',\n              '#74573f',\n            ]}\n          />\n        </div>\n        <div className=\"landing-item interests bounce-in-top4\">\n          <PolygonContainer\n            polygonName=\"Interests\"\n            polygonType=\"tetrahedron\"\n            illoSelector=\"tetrahedron-container\"\n            colors={[\n              '#B88B4A',\n              '#a77d42',\n              '#bf975c',\n              '#c6a26f',\n              '#B88B4A',\n              '#c6a26f',\n            ]}\n          />\n        </div>\n      </section>\n    </main>\n  );\n};\n\nexport default Landing;\n","import React from 'react';\nimport Landing from '../Components/Landing';\n\nconst Homepage = () => {\n  return <Landing />;\n};\n\nexport default Homepage;\n","import React, { Component } from 'react';\nimport Homepage from './pages/Homepage';\nimport profileData from './profileData.json';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      landingData: profileData.landing,\n      experience: profileData.experience,\n      education: profileData.education,\n      skills: profileData.skills,\n      interests: profileData.interests,\n      awards: profileData.awards,\n    };\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <Homepage />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}